name: Actions

on: [push, pull_request]

jobs:
  test:
    name: Test project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-TestProject-Editor
          restore-keys: |
            Library-TestProject-
            Library-

      # Run tests
      - name: Run tests
        id: myTestStep
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 6000.0.48f1

      # Upload test results
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test results
          path: ${{ steps.myTestStep.outputs.artifactsPath }}

      # Upload coverage results
      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Coverage results
          path: ${{ steps.myTestStep.outputs.coveragePath }}

  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-BuildProject-Android
          restore-keys: |
            Library-BuildProject-
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          androidExportType: 'androidPackage'
          versioning: Semantic
          targetPlatform: Android
          allowDirtyBuild: true

      # Upload APK
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-APK
          path: build